#!/usr/bin/env python3
import os
import judge
from time import process_time


def read_input():
    inputs = list()  # a list containing inputs from all files
    for file in input_files:
        input = list()  # input from a single file
        with open(file) as fh:
            pass  # TODO: insert whatever code is necessary
        inputs.append(input)
    return inputs


def func(input):
    """your alorithm"""
    result = list()  # each entry represents one line from the output
    return result


path = "testdata/<folder name>/"  # path to the local test files
input_files = [os.path.join(path, file) for file in os.listdir(path) if file.endswith(".input")]
output_files = [os.path.join(path, file) for file in os.listdir(path) if file.endswith(".output")]
# the files are returned in arbitrary order and must be sorted
input_files.sort()
output_files.sort()

inputs = read_input()  # inputs from the test files

# outputs generated by the algorithm
start_time = process_time()
outputs = list()
for input in inputs:
    outputs.append([func(case) for case in input])
#   outputs.append(value_search(input))  for test files without multiple cases
end_time = process_time()

judge.run(output_files, outputs, end_time - start_time)
