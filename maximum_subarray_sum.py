#!/usr/bin/env python3
import judge
from time import process_time


def maximum_subarrays_sum(A):
    """returns the maximum subarray sum"""
    total_max = 0
    temp_max = 0
    for i in A:
        temp_max += i
        if temp_max < 0:
            temp_max = 0
        if temp_max > total_max:
            total_max = int(temp_max)
    return [total_max]


# A&D programming exercise number
exercise = 4
# inputs from the test files
inputs = judge.read_input(exercise)
# outputs generated by the algorithm
start_time = process_time()
outputs = list()
for input in inputs:
    try:
        outputs.append([maximum_subarrays_sum(case) for case in input])
    except TypeError:  # in case input isn't an iterable object
        outputs.append(maximum_subarrays_sum(input))
end_time = process_time()

judge.verify_output(exercise, outputs, end_time - start_time)
